service:
  name: oms
  version: v1.0.0
server:
  http:
    address: 0.0.0.0:8016
    timeout: 1s
  grpc:
    address: 0.0.0.0:9016
    timeout: 1s
data:
  database:
    driver: mysql
    source: root:123456@tcp(127.0.0.1:3306)/handleim?charset=utf8&parseTime=true
    logger:
      logLevel: 4
      ignoreRecordNotFoundError: true
      slowThreshold: 1s
  redis:
    addrs:
      - 127.0.0.1:6379
    dial_timeout: 0.1s
    read_timeout: 0.2s
    write_timeout: 0.2s
    expire_timeout: 600s
    username:
    password:
    db: 1
  pub:
    rabbit:
      username: admin
      password: "123456"
      host: 127.0.0.1
      port: 5672
      vHost: /my_vhost
    contentType:
reg:
  providerType: Consul
  endpoints:
    - "127.0.0.1:8500"
  dialTimeout: 3s
trace:
  providerType: Stdout
  type: Traces
  traces: true
  endpoint: no
logger:
  - type: Stdout
    level: -1
  - type: File
    level: -1
    path: ./logs
    logGroupName: btctran
rabbitMq:
  address: amqp://admin:123456@127.0.0.1:5672/my_vhost
  consumer:
    queue:
      - xx
genGorm:
  version: "0.1"
  database:
    # consult[https://gorm.io/docs/connecting_to_the_database.html]"
    dsn: "root:123456@tcp(127.0.0.1:3306)/handleim?charset=utf8mb4&parseTime=True&loc=Local"
    # input mysql or postgres or sqlite or sqlserver. consult[https://gorm.io/docs/connecting_to_the_database.html]
    db: "mysql"
    # enter the required data table or leave it blank.You can input :
    tables:
      - mail
      - message
      - friends
      - rooms
    # specify a directory for output
    outPath: "./internal/dao/query"
    # query code file name, default: gen.go
    outFile: ""
    # generate unit test for query code
    withUnitTest: false
    # generated model code's package name
    modelPkgName: ""
    # generate with pointer when field is nullable
    fieldNullable: false
    # generate field with gorm index tag
    fieldWithIndexTag: false
    # generate field with gorm column type tag
    fieldWithTypeTag: false
    # detect integer field's unsigned type, adjust generated data type
    fieldSignable: false
